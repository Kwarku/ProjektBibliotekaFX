/*      REFERENCJA
* Aby dodac mozliwosc sterowania przyciska z klasy TopMenuButton nalezy:
* - stworzyc puste okno np BorderPane
* - metoda include dodac tam caly plik fxml z innym wygladem
* - od razu dodac fx:id dla tego obiektu
* o tak: <fx:include source="TopMenuButtons.fxml" fx:id="topMenuButtons" />
* - wstrzyknac to dodanie do klasy glownego controllera
*
* - nastepnie dodanie id dla glownego kontenera (borderPane)
* -wstrzykniecie tego kontenera do jego controllera
* -stworzyc metoda initialize w klasie glownego controllera
*
* - stworzenie pola MainControllera w klasie TopMenuButtonsController
* - stworznie settera do tego pola prywatnego
*
* - w metodzie inizlialize po zaladowaniu kontrollera przekazujemy referencje
* topMenuButtonsController.setMainController(this);
*
* i to juz dziala
*
*
* */


---------------------------------------------------------------------------------

/*      INTERNACJONALIZACJA
* Aby wprowadzic mozliwosc zmiany jezyka w calej aplikacji nalezy:
* - upewnic sie ze mamy poprawny sposob kodowania w srodowisku ( w intellij to Editor -> file encodings UTF-8 wszedzie)
* - w folderze resources stworzyc nowy folder o nazwie bundles
* - stworzyc nowy i wybrac Resource Bundle
* - na gorze wybieramy nazwe, i po prawej dodajemy lokalizajce pl (jezeli chcemy wiecej jezykow luz)
* - powstaja pliki do kazdego jezyka i default, gdy system nie wykryje wlasciwej lokalizacji uzyje default
* - wchodzimy do pliku, na dole wybieramy z zakladki Resource Bundle i:
* - dodajemy klucz nastepnie dodajemy tresc czyli napis jaki ma byc: np title.app -> default Application, pl Aplikacja
*
* - podpinamy w klasie main nasze bundle
* - uzywamy klasy ResourceBundles i metody statycznej getBundle o tak:
*   ResourceBundle XXXXXXX = ResourceBundle.getBundle("bundles.messages")
* - podajemy sciezke tylko do glownej nazwy tych bundlesow
*
* - nastepnie uzywamy loadera zeby dodac resoursy
*   loader.setResources(resourceBundle);
*
* - teraz gdy chcemy uzyc tego tytulu w pliku javy nalezy uzyc metody XXXXX.getString
*  oraz podac klucz tego stringa np "title.application" no i dziala
*
* ABY podac to w Scene Builderze nalezy :
* - w zakladce Preview - > Internaationalien -> set Resources i podac nasz wybrany plik jezykowy
* - wejsc w dowolny np przycisk z napisem
* - wybrac rubryke Text
* - z opcji wybrac Replace with Internacionalize String
* - podac interesujacy nas klucz
*
* - aby sprawdzic czy dziala nalezy zmienic lokalizacje:
* sluzy do tego metoda Locale.setDefault(new Locale("en" albo inny jezyk ))
*
* */

---------------------------------------------------------------------------------
*
*           WCZYTANIE NOWEJ FORMATKI W OKNIE GLOWNYM
*  - tworzymy metode publiczna w klasie main contorller np. setCenter
*  - przekazujemy jej jako parametr Stringa z sciezka do pliku fxml
*  - nastepnie wzyczajnie wczytujemy plik fxml uzyuwajac FXMLLoadera
*  - zamiast wymyslac jaki kontener  uzyjemy uzywamy Parent jako rodzica wszystkich kontenerow
*  - jako sciezke podajemy nasz parametr z metody
*  - obslugujemy wyjatek
*  - do borderPane albo innej czesci naszego glownego kontenera dodajemy wczytana formatke
*  - w interesujacej nas klasie powolujemy sie na ta metode i wczytujemy pieknie ze sciezki
*
* */


---------------------------------------------------------------------------------
/*Dodanie obslugi klasy w bazie danych
    * tworzymy BookFX jako odpowiednik klasy Book ktora znajduje sie do obslugi samej bazy danych i przypisujemy jej property do
    * kazdej zmiennej znajdujacej sie w bazie Integer, Sting Object itd
    * tworzymy gettery settery do wszystkiego
    * nastpenie tworzymy klase BookModel i tworzymy ObjectProperty do klasy bookFx
    * private ObjectProperty<BookFx> bookFxObjectProperty = new SimpleObjectProperty<>(new BookFx());
    * koniecznie najwazniejsze dodac nowa klase bookFx parametrach propertki
    * tworzymy getery settery do wszystkeigo
    * nastpenie w klasie controllera wsrzytkujemy potrzbene elementy
    * dodajemy instancje klasy BookModel (BookModel bookModel = new BookModel())
    * bindujemy kazda wartosc z klasy BookFx z naszymi oknami do sterowania
    *  this.bookModel.bookFxObjectPropertyProperty().get().authorFxProperty().bind(this.authorComboBox.valueProperty());

    * */



---------------------------------------------------------------------------------

  /*przypisanie potrzebne dla obslugi ComboBoxa
    * otwiedzmay polaczenie z baza dancyh nastepnie tworzymy lsite obiektow klasy z bazy danych
    * i szukamy po wszystkich obietkach
    * czyscimy ObservableList klasy CategoryFX
    * dla wszytkich obiektow tworzymy nowy obiekt klasy CategoryFx i uzywajac konwertego konwertujemy go
    * dodajemy do listy categoryFX ObservableList
    * wyjatki przekazujemy dalej az by moc je obsluzyc w klasie kontrollera
    * zamykamy połączenie
    *
    * nastepnie w klasie controller
    * //wypelnienie comboboxow lista z modelu
        this.categoryComboBox.setItems(this.bookModel.getCategoryFxObservableList());
        this.authorComboBox.setItems(this.bookModel.getAuthorFxObservableList());

    *
    * */